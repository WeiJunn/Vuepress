(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{524:function(t,s,a){"use strict";a.r(s);var n=a(62),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数组的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的方法"}},[t._v("#")]),t._v(" 数组的方法")]),t._v(" "),a("h2",{attrs:{id:"push"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[t._v("#")]),t._v(" push()")]),t._v(" "),a("ul",[a("li",[t._v("用来向数组的最后添加一个 or 多个元素")]),t._v(" "),a("li",[t._v("返回该数组新的长度")])]),t._v(" "),a("h2",{attrs:{id:"pop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pop"}},[t._v("#")]),t._v(" pop()")]),t._v(" "),a("ul",[a("li",[t._v("用来删除该数组最后一个元素")]),t._v(" "),a("li",[t._v("返回被删除的元素")])]),t._v(" "),a("h2",{attrs:{id:"unshift"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unshift"}},[t._v("#")]),t._v(" unshift()")]),t._v(" "),a("ul",[a("li",[t._v("用来向数组的前面添加一个 or 多个元素")]),t._v(" "),a("li",[t._v("返回新的长度")])]),t._v(" "),a("h2",{attrs:{id:"shift"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shift"}},[t._v("#")]),t._v(" shift()")]),t._v(" "),a("ul",[a("li",[t._v("用来删除该数组的一个元素")]),t._v(" "),a("li",[t._v("返回被删除的元素")])]),t._v(" "),a("h2",{attrs:{id:"slice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[t._v("#")]),t._v(" slice()")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("slice 用来截取数组(非破坏的方法 不影响原数组)")])]),t._v(" "),a("li",[a("p",[t._v("参数:")]),t._v(" "),a("ol",[a("li",[t._v("截取的起始位置的索引(包含起始的位置)")]),t._v(" "),a("li",[t._v("截取的结算位置的索引(不包含结束的位置)\n"),a("ul",[a("li",[t._v("可以省略第二个参数省略就表示截取到最后")])])])]),t._v(" "),a("p",[t._v("3.索引可以传负值(-1)表示倒数第一以此类推")])])]),t._v(" "),a("h2",{attrs:{id:"splice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splice"}},[t._v("#")]),t._v(" splice()")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("splice() 可以用来删除,替换,添加数组中的元素(破坏性的方法 影响原数组)")])]),t._v(" "),a("li",[a("p",[t._v("参数:")]),t._v(" "),a("ol",[a("li",[t._v("删除元素起始位置的索引(包含起始的位置)")]),t._v(" "),a("li",[t._v("删除元素的个数")])]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从索引0(不包括0)开始 删除和三个元素")]),t._v("\n")])])])])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("返回值:")])]),t._v(" "),a("ul",[a("li",[t._v("被删除的元素")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("可以传递多个参数,这些参数将作为新元素添加到数组中")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"牛魔王"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"诸葛亮"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从索引0开始(不包括0)删除3个元素再 添加两个")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"concat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concat"}},[t._v("#")]),t._v(" concat()")]),t._v(" "),a("ul",[a("li",[t._v("concat()不会影响原数组.而是将元素拼接到一个新数组中返回")]),t._v(" "),a("li",[t._v("用来连接两个或者多个数组")]),t._v(" "),a("li")]),t._v(" "),a("h2",{attrs:{id:"indexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexof"}},[t._v("#")]),t._v(" indexof()")]),t._v(" "),a("ul",[a("li",[t._v("查询元素再数组中的位置索引")]),t._v(" "),a("li",[t._v("参数\n"),a("ul",[a("li",[t._v("1.要查询的元素")]),t._v(" "),a("li",[t._v("2.查询的起始位置")])])]),t._v(" "),a("li",[t._v("返回值:\n"),a("ul",[a("li",[t._v("返回元素第一次再数组中出现的位置")]),t._v(" "),a("li",[t._v("如果没有找到元素,则返回-1")])])])]),t._v(" "),a("h2",{attrs:{id:"lastindexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lastindexof"}},[t._v("#")]),t._v(" lastindexof()")]),t._v(" "),a("p",[t._v("last 从右往左找最后一个元素的索引")]),t._v(" "),a("h2",{attrs:{id:"join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[t._v("#")]),t._v(" join()")]),t._v(" "),a("ul",[a("li",[t._v("join()非破坏性方法")]),t._v(" "),a("li",[t._v("用来将数组中的的所有元素连接为一个字符串")]),t._v(" "),a("li",[t._v("参数:\n"),a("ol",[a("li",[t._v("指定一个连接符(字符串)作为参数,如果不指定则默认为,")])])])]),t._v(" "),a("h2",{attrs:{id:"reverse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[t._v("#")]),t._v(" reverse()")]),t._v(" "),a("ul",[a("li",[t._v("破坏性方法,用来对数组进行反转,会改变原来数组")])]),t._v(" "),a("h2",{attrs:{id:"sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[t._v("#")]),t._v(" sort()")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("用来对数组进行排序,也会影响原数组")])]),t._v(" "),a("li",[a("p",[t._v("使用 sort()对元素进行排序的时候,比较的是元素的字符编码而不是数字的大小")])]),t._v(" "),a("li",[a("p",[t._v("可以再 sort()通过回调函数来指定排序规则")]),t._v(" "),a("ul",[a("li",[a("h2",{attrs:{id:"如果希望升序排列-从小到大"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果希望升序排列-从小到大"}},[t._v("#")]),t._v(" 如果希望升序排列(从小到大)")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fuction")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("h2",{attrs:{id:"如果希望降序排列-从大到小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果希望降序排列-从大到小"}},[t._v("#")]),t._v(" 如果希望降序排列(从大到小)")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fuction")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("h2",{attrs:{id:"如果希望乱序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果希望乱序"}},[t._v("#")]),t._v(" 如果希望乱序")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fuction")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);